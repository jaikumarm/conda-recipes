package:
  name: theano
  version: !!str 0.9.0.dev2

source:
  git_url: https://github.com/Theano/Theano.git
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # noarch_python: True
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - theano = theano:main
    #
    # Would create an entry point called theano that calls theano.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - numpy >=1.7.1
    - scipy >=0.11
    - six >=1.9.0

  run:
    - python
    - numpy >=1.7.1
    - scipy >=0.11
    - six >=1.9.0

test:
  requires:
    - nose
    - nose-parameterized
  # Python imports
  imports:
    - theano
    - theano.compat
    - theano.compile
    - theano.compile.sandbox
    - theano.compile.tests
    - theano.gof
    - theano.gof.tests
    - theano.misc
    - theano.misc.tests
    - theano.sandbox
    - theano.sandbox.cuda
    - theano.sandbox.cuda.tests
    - theano.gpuarray
    - theano.gpuarray.tests
    - theano.sandbox.linalg
    - theano.sandbox.linalg.tests
    - theano.scalar
    - theano.scalar.tests
    - theano.scan_module
    - theano.scan_module.tests
    - theano.sparse
    - theano.sparse.sandbox
    - theano.sparse.tests
    - theano.tensor
    - theano.tensor.nnet
    - theano.tensor.nnet.tests
    - theano.tensor.signal
    - theano.tensor.signal.tests
    - theano.tensor.tests
    - theano.tests
    - theano.typed_list
    - theano.typed_list.tests


  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://deeplearning.net/software/theano/
  license: BSD License
  summary: 'Optimizing compiler for evaluating mathematical expressions on CPUs and GPUs.'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
